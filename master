from roomsq.sq import Room
''Модуль выччисляет необходимые площади для ремонта комнаты'''


class Room:

    def __init__(self, width, lenght, height):
        if isinstance(width, float) and isinstance(lenght, float) and isinstance(height, float):
            self.width = width
            self.lenght = lenght
            self.height = height
        else:
            raise ValueError('Размеры комнаты должны быть типа float')

    def set_square_FULL(self):
        '''Метод вычисляет площадь комнаты без вычета площади окон и дверей'''
        return (self.width + self.lenght) * self.height * 2

    def set_square_WD(self, width_WD, height_WD):
        '''Метод задает общую длину и общую ширину дверей и окон комнаты'''
        if isinstance(width_WD, float) and isinstance(height_WD, float):
            self.width_WD = width_WD
            self.height_WD = height_WD
        else:
            raise ValueError('Размеры дверей и окон должны быть типа float')

    def get_square_WD(self):
        '''Метод вычисляет общую площадь дверей и окон'''
        return self.width_WD * self.height_WD

    def wallpapers(self, width_WP, lenght_WP):
        '''Метод задает длину и ширину одного рулона обоев'''
        if isinstance(width_WP, float) and isinstance(lenght_WP, float):
            self.width_WP = width_WP
            self.lenght_WP = lenght_WP
        else:
            raise ValueError('Размеры рулона должны быть типа float')

    def get_square_WP(self):
        '''Метод вычисляет площадь одного рулона обоев'''
        return self.width_WP * self.lenght_WP


print(Room.__dir__)

my_room = Room(float(input('Введите ширину комнаты:\n')),
               float(input('Введите длину комнаты:\n')), float(input('Введите высоту комнаты:\n')))

print(Room.__doc__)
my_room.set_square_WD(float(input('Введите общую ширину дверей и окон:\n')),
                      float(input('Введите общую высоту дверей и окон:\n')))


my_room.wallpapers(float(input('Введите ширину одного рулона обоев:\n')),
                   float(input('Введите длину одного рулона обоев:\n')))


last_square = (my_room.set_square_FULL() - my_room.get_square_WD())
count_WP = last_square / my_room.get_square_WP()
print(f'Площадь оклеиваемой поверхности составляет: {last_square} метров\n'
      f'Количество рулонов обоев необходимое для ремонта: {int(count_WP) + 1}')
